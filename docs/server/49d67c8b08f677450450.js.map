{"version":3,"file":"49d67c8b08f677450450.js","sources":["webpack:///./mixins/Details.js"],"sourcesContent":["import { apiImgUrl } from '~/api';\n\n/**\n * Name\n */\nexport const name = {\n  computed: {\n    name () {\n      return this.item.title ? this.item.title : this.item.name;\n    },\n  },\n};\n\n/**\n * Star rating\n */\nexport const stars = {\n  computed: {\n    stars () {\n      if (this.item.vote_average) {\n        return this.item.vote_average * 10;\n      }\n    },\n  },\n};\n\n/**\n * Year started\n */\nexport const yearStart = {\n  computed: {\n    yearStart () {\n      const date = this.item.release_date ? this.item.release_date : this.item.first_air_date;\n\n      if (date) {\n        return date.split('-')[0];\n      }\n    },\n  },\n};\n\n/**\n * Year ended\n */\nexport const yearEnd = {\n  computed: {\n    yearEnd () {\n      const date = this.item.last_air_date;\n\n      if (date) {\n        return date.split('-')[0];\n      }\n    },\n  },\n};\n\n/**\n * Backdrop\n */\nexport const backdrop = {\n  computed: {\n    backdrop () {\n      if (this.item.backdrop_path) {\n        return `${apiImgUrl}/original${this.item.backdrop_path}`;\n      }\n    },\n  },\n};\n\n/**\n * Certification\n */\nexport const cert = {\n  computed: {\n    cert () {\n      // movie\n      if (this.item.release_dates) {\n        const releases = this.item.release_dates.results.find(release => release.iso_3166_1 === process.env.API_COUNTRY || release.iso_3166_1 === 'US');\n\n        if (!releases) return null;\n\n        const item = releases.release_dates.find(date => date.certification !== '');\n\n        if (item) return item.certification;\n      // tv\n      } else if (this.item.content_ratings) {\n        const releases = this.item.content_ratings.results.find(release => release.iso_3166_1 === process.env.API_COUNTRY || release.iso_3166_1 === 'US');\n\n        if (!releases) return null;\n\n        return releases.rating;\n      }\n    },\n  },\n};\n\n/**\n * Trailer\n */\nexport const trailer = {\n  computed: {\n    trailer () {\n      let videos = this.item.videos.results;\n\n      // if no videos, do nothing\n      if (!videos.length) return null;\n\n      // filter by type of video\n      videos = videos.find(video => video.type === 'Trailer');\n\n      // if no trailer found, do nothing\n      if (!videos) return null;\n\n      return [{\n        name: videos.name,\n        src: `https://www.youtube.com/embed/${videos.key}?rel=0&showinfo=0&autoplay=1`,\n      }];\n    },\n  },\n};\n\n/**\n * Directors\n */\nexport const directors = {\n  computed: {\n    directors () {\n      const people = this.item.credits.crew;\n\n      if (people) {\n        return people.filter(person => person.job === 'Director').map(person => `<a href=\"/person/${person.id}\">${person.name}</a>`).join(', ');\n      }\n    },\n  },\n};\n\n/**\n * Creators\n */\nexport const creators = {\n  computed: {\n    creators () {\n      const people = this.item.created_by;\n\n      if (people) {\n        return people.map(person => `<a href=\"/person/${person.id}\">${person.name}</a>`).join(', ');\n      }\n    },\n  },\n};\n"],"mappings":"AAAA","sourceRoot":""}